(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{1188:function(e,t,s){var a,i;a=[s(7),s(1189)],void 0===(i=function(e,t){var s={title:"Tutorials"};return{docs:function(e){app.loading(),app.bc.reset([s]),app.content.show(new t({id:e}))}}}.apply(t,a))||(e.exports=i)},1189:function(e,t,s){var a,i;a=[s(51),s(64),s(1190),s(1191),s(1192),s(1193),s(1194),s(1195),s(1196),s(1197)],void 0===(i=function(e,t,s,a,i,o,n,r,p,l){let c={template:a},d={template:i},h={template:o},m={template:n},u={template:r},g={template:p},f={template:l};return t.extend({vueView:e.extend({template:s,components:{"tutorial-proposal":c,"tutorial-contact":d,"tutorial-mobile":h,"tutorial-data":m,"tutorial-samples":u,"tutorial-shipment":g,"tutorial-experiment":f},data:function(){return{currentPage:"proposals"}},methods:{onShowPage:function(e){this.currentPage=e}}})})}.apply(t,a))||(e.exports=i)},1190:function(e,t){e.exports='<div id=vue-template class=content> <h1>Tutorials</h1> <div class="filter clearfix"> <ul> <li v-bind:class="{current: currentPage === \'proposals\'}" v-on:click="onShowPage(\'proposals\')">Select Proposal</li> <li v-bind:class="{current: currentPage === \'contacts\'}" v-on:click="onShowPage(\'contacts\')">Register Contact</li> <li v-bind:class="{current: currentPage === \'shipments\'}" v-on:click="onShowPage(\'shipments\')">Create Shipment</li> <li v-bind:class="{current: currentPage === \'samples\'}" v-on:click="onShowPage(\'samples\')">Register Samples</li> <li v-bind:class="{current: currentPage === \'experiments\'}" v-on:click="onShowPage(\'experiments\')">Prepare Experiment</li> <li v-bind:class="{current: currentPage === \'data\'}" v-on:click="onShowPage(\'data\')">View Your Data</li> <li v-bind:class="{current: currentPage === \'mobile\'}" v-on:click="onShowPage(\'mobile\')">Mobile Access</li> </ul> </div> <tutorial-proposal v-if="currentPage === \'proposals\'"></tutorial-proposal> <tutorial-contact v-else-if="currentPage === \'contacts\'"></tutorial-contact> <tutorial-mobile v-else-if="currentPage === \'mobile\'"></tutorial-mobile> <tutorial-data v-else-if="currentPage === \'data\'"></tutorial-data> <tutorial-samples v-else-if="currentPage === \'samples\'"></tutorial-samples> <tutorial-shipment v-else-if="currentPage === \'shipments\'"></tutorial-shipment> <tutorial-experiment v-else-if="currentPage === \'experiments\'"></tutorial-experiment> <p v-else>No Tutorial specified</p> </div>'},1191:function(e,t){e.exports='<section class=content> <h1>Select a Proposal</h1> <p>To start first select the &quot;Proposal&quot; page from the main menu</p> <p class=inset><img alt="" src=/assets/images/doc/proposal/proposal_start.png /></p> <p>This will take you to the list of proposals that you are registered on.</p> <p class=inset><img alt="" src=/assets/images/doc/proposal/proposal_select.png /></p> <p>You can search through this list using the search box in the top right. To select a proposal click on the associated row.</p> </section>'},1192:function(e,t){e.exports='<section class=content> <h1>Add Lab Contact</h1> <p>To start select the &quot;Lab Contacts&quot; page from the proposal menu</p> <p class=inset><img alt="" src=/assets/images/doc/contact/select_contact.png /></p> <p>This will take you to the lab contact page, which lists all lab contacts for the currently selected proposal. From this page click the &quot;Add Lab Contact&quot; button on the top right hand side to register a new lab contact</p> <p class=inset><img alt="" src=/assets/images/doc/contact/add_contact.png> /></p> <p>This will take you to the "Add Home Lab Contact" form.</p> <p class=inset><img alt="Add Shipment Form" src=/assets/images/doc/contact/add_contact_form.png /></p> <p>Here you can fill in all the details for the lab contact. Once finished click the &quot;Add Contact&quot; button to save any changes and be returned to the list of contacts</p> </section> '},1193:function(e,t){e.exports='<section class=content> <h1>Mobile Access</h1> <p>SynchWeb is optimised for use on mobile devices, working with both tablet and phone sized devices. The navigation menu is organised in such a way to make it easier to use on small displays.</p> <p class=inset> <img class=match alt="Layout on smartphone" src=/assets/images/doc/mobile/phone.png /> <img class=match alt="Navigation menu" src=/assets/images/doc/mobile/phone_menu.png /> </p> <p class=inset><img alt="Layout on tablet" src=/assets/images/doc/mobile/tablet.png /></p> <p>As such it is possible to use almost all of the existing functionality on a mobile device. This includes things like registering shipments, and samples, as well as following data collections</p> <p class=inset> <img class=match alt="Register samples" src=/assets/images/doc/mobile/phone_samples.png /> <img class=match alt="View Data" src=/assets/images/doc/mobile/phone_data.png /> </p> </section>'},1194:function(e,t){e.exports='<section class=content> <h1>Viewing Data</h1> <p>There are a number of ways to view your data including from the home page which shows your previous and next visits, and from the visits page which shows all visits for the currently selected proposal. Click a visit to see data collections associated with it</p> <p class=inset><img alt="Select Visit" src=/assets/images/doc/data/data_select_visit.png /></p> <p>Using either of these methods will show a list of data collections for a particular visit</p> <p class=inset><img alt="Viewing Data" src=/assets/images/doc/data/data_search_ap.png> /></p> <p>From this page you can view diffraction /assetsimages for each data collection, crystal snapshots, and DISTL plots. You can search through data collections using the search box on the right and filter data collections by type using the list of filters on the top</p> <p>Auto processing results from the Fast DP and XIA2 pipelines can be displayed by clicking the &quot;Auto Processing&quot; header. &quot;Downstream Processing&quot; shows results from the Fast EP and DIMPLE pipelines</p> <p class=inset><img alt="Dimple Results" src=/assets/images/doc/data/data_dimple.png /></p> <p>Results from Edge Scans are also displayed along with the calculated values from CHOOCH</p> <p class=inset><img alt="Dimple Results" src=/assets/images/doc/data/data_edge_filter.png /></p> <p>MCA spectra are also displayed along with peaks identified automatically via AutoPyMCA</p> <p class=inset><img alt="Dimple Results" src=/assets/images/doc/data/data_mca.png /></p> </section>'},1195:function(e,t){e.exports='<section class=content> <h1>Registering Samples</h1> <ol class=rounded> <li>Create Shipment</li> <li>Create Protein</li> <li>Register Samples</li> </ol> <p>To register samples, it is first necessary to create a new shipment. Please see the other tutorials for instructions on how to do this.</p> <p>Once a Shipment has been created click the &quot;Add Container&quot; button on a dewar in the shipment</p> <p class=inset><img alt="Add Container" src=/assets/images/doc/samples/add_container.png /></p> <p>This will take you to the register container page. Here you can register samples for this puck.</p> <p class=inset><img alt="Add Container Form" src=/assets/images/doc/samples/add_container_form.png /></p> <p>Firstly you need to give the new puck a name. After that each sample needs to be given a protein acronym and sample name as a minimum. Barcode and spacegroup can also be specified if needed. The "+" icon can be used to clone a sample in a similar mannar to the GDA client.</p> <p class=inset><img alt="Registered Samples" src=/assets/images/doc/samples/registered_samples.png /></p> <p>When a protein acronym and sample name has been specified ISPyB considers the sample to be valid and shows this as a green circle in the puck graphic. You can navigate to a particular sample position by clicking on the puck graphic</p> <p>If you need to add a new protein acronym, simply type into the protein acronym box and press Tab</p> <p class=inset><img alt="New Protein" src=/assets/images/doc/samples/add_protein.png /></p> <p>You will be prompted to confirm the new protein addition</p> <p class=inset><img class=match alt="Confirm New Protein" src=/assets/images/doc/samples/add_protein_popup.png /></p> <p>Click "Ok" and the new protein will be created</p> <p>Finally to save your new puck click &quot;Add Container&quot; at the bottom of the page</p> <h1>Using the old ISPyB Excel Spreadsheet</h1> <p>Although not recommended, ISPyB2 supports the old style Excel Spreadsheet. First fill in the spreadsheet as you would usually.</p> <p class=inset><img alt="Populated Spreadsheet" src=/assets/images/doc/samples/spreadsheet.png /></p> <p>Now select the current spreadsheet using CTRL-A (CMD-A on Mac) to select the spreadsheet. Depending on your location in the sheet you may need to press this twice.</p> <p class=inset><img alt="Selected Spreadsheet" src=/assets/images/doc/samples/spreadsheet_selected.png /></p> <p>Now press CTRL-C (CMD-C on Mac) to copy the contents of the selection to the clipboard. Now go back to ISPyB2 and click the "Paste from Spreadsheet" button</p><p> </p><p class=inset><img alt="Paste from Spreadsheet" src=/assets/images/doc/samples/paste_spreadsheet.png /></p> <p>This will show a popup. In this popup press CTRL-V (CMD-V on Mac) to paste the contents of the clipboard, then click "Insert"</p> <p class=inset><img class=match alt="Popup Pasted" src=/assets/images/doc/samples/paste_spreadsheet_popup_pasted.png /></p> <p>The copied samples will now be inserted into the current puck</p> <p class=inset><img alt="Pasted Samples" src=/assets/images/doc/samples/pasted_samples.png /></p> </section>'},1196:function(e,t){e.exports='<section class=content> <h1>Create a Shipment</h1> <ol class=rounded> <li>Create Lab Contact</li> <li>Create Shipment</li> <li>Print Shipment Labels</li> </ol> <h2>Create Lab Contact</h2> <p>To create a new shipment, it is necessary to designate a Lab Contact. This person will be our first point of contact regarding matters related to your shipments. ISPyB allows you to easily register different lab contact profiles. See the Lab Contact tutorial for how to register a new Lab Contact</p> <h2>Create Shipment</h2> <p>Once a Lab Contact has been registered select the "Shipment" page from the proposal menu</p> <p class=inset><img alt="Shipment Select" src=/assets/images/doc/shipment/select_shipment.png /></p> <p>This will take you to the shipments page, which lists all shipments for the currently selected proposal. From this page click the &quot;Add Shipment&quot; button on the top right hand side to register a new shipment</p> <p class=inset><img alt="Add Shipment" src=/assets/images/doc/shipment/add_shipment.png /></p> <p>This will take you to the "Add Shipment" form. Here you can enter your unique Diamond Dewar ID for each dewar in the shipment. For more information about Diamond Dewar IDs see <a href=http://diamond.ac.uk/Beamlines/Mx/Common/Common-Manual/Shipping-Samples/DewarRegistration.html>here</a>.</p> <p class=inset><img alt="Add Shipment Form" src=/assets/images/doc/shipment/add_shipment_form_2019.png /></p> <p>Although it is not compulsory, we strongly encourage you to provide the information about your courier company at this stage. As you are planning to send your dewar to Diamond, you probably have this information available.</p> <h2>Updated Process For New Shipments</h2> <p>From April 2019, only registered dewars can be added to a shipment in SynchWeb</p> <p>A drop down box lists the dewars that are available to a proposal</p> <p>If no dewars are available, you will need to either register a new dewar or migrate a dewar to the current proposal</p> <p class=inset><img alt="Add Shipment Highlight" src=/assets/images/doc/shipment/add_shipment_form_highlight.png /></p> <h2>Register New Dewar</h2> <p>The register link on the add shipment form takes you to the registered dewars list</p> <p>From here click on "Register Dewar" button to create a new entry</p> <p class=inset><img alt="Registered Dewar List" src=/assets/images/doc/shipment/registered_dewars_list.png /></p> <p>Fill in the form with a valid facility code and purchase date</p> <p class=inset><img alt="Validate new Dewar" src=/assets/images/doc/shipment/register_dewar_form_complete.png /></p> <p>The form will prevent facility codes that have been previoiusly registered </p> <p class=inset><img alt="Register new Dewar" src=/assets/images/doc/shipment/register_new_dewar_validation.png /></p> <p>Once the form is submitted go back to the shipment page and the dewar should be available in the drop down list</p> <h2>Migrate Dewar</h2> <p><b>Please make sure that your Lab Contact information is up to date before trying to migrate dewars or lab contacts</b></p> <p>The Lab Contact address should be three lines maximum and not include city, post code or country values (there are specific fields for this information).</p> <p>Editing an existing Lab Contact entry will guide you through correcting and updating your contact details</p> <p>To reuse a dewar from an old proposal, <b>first select the old proposal in SynchWeb</b></p> <p>Then select the "Migrate" menu option under the proposal menu</p> <p class=inset><img alt="Migrate Dewar Menu" src=/assets/images/doc/shipment/migrate_menu_option.png /></p> <p>This will take you to the "Migrate" form where you can migrate dewars and lab contacts to your current/new proposal</p> <p class=inset><img alt="Migrate Dewar" src=/assets/images/doc/shipment/migrate_dewar.png /></p> <p>Enter the new proposal number in the input (the field will auto complete)</p> <p>Once the new proposal is found, you can copy lab contacts and select dewars to migrate (make available) in the new proposal</p> <p>Once finished, navigate back to the shipment page and the dewars will be available for selection</p> <h2>View Shipment</h2> <p>Once you have clicked "Add Shipment" at the bottom of the Add Shipment form, your shipment will be created and you can view the shipment information</p> <p class=inset><img alt="View Shipment" src=/assets/images/doc/shipment/view_shipment.png /></p> <p>To obtain the shipment labels, click the "Print Shipment Labels" from the shipment page</p> <p class=inset><img alt="Print Labels" src=/assets/images/doc/shipment/print_labels.png /></p> <p>Please stick the outward label (page 2) to the side of your dry shipper and include the return-bound label (page 3) within the dry shipper, especially if you are planning a remote access visit.</p> </section>'},1197:function(e,t){e.exports='<section class=content> <h1>Prepare Experiment - Assign Containers</h1> <p>Before preparing your experiment you first need to have created a shipment and registered your samples. Please see previous tutorials for instructions on how to do this.</p> <p>To prepare your experiment, your pucks need to be loaded in to the robot dewar. You will need the puck position locations ready for the next step. </p> <p>First select the &quot;Prepare Experiment&quot; page from the proposal menu</p> <p class=inset><img alt="Prepare Select" src=/assets/images/doc/prepare/prepare_select.png /></p> <p>Then you need to select the visit for which you want to assign containers</p> <p class=inset><img alt="Select Visit" src=/assets/images/doc/prepare/prepare_select_visit.png /></p> <p>You will then be presented with the sample changer for the beamline for the selected visit along with all of your dewars and their associated containers</p> <p class=inset><img alt="Prepare Visit" src=/assets/images/doc/prepare/prepare_view.png /></p> <p>Containers can easily be assigned to sample changer positions by simply dragging the container to a position on the sample changer</p> <p class=inset><img alt="Drag Container" src=/assets/images/doc/prepare/prepare_drag.png /></p> <p>You will then be asked to confirm the assignment</p> <p class=inset><img class=match alt="Confirm Drag" src=/assets/images/doc/prepare/prepare_drag_confirm.png /></p> <p>The container is then assigned to the position in the sample changer, and the dewar is marked as active. This is shown by the green background</p> <p class=inset><img alt="Container Assigned" src=/assets/images/doc/prepare/prepare_assigned.png /></p> <p>Finally the data in GDA needs to be refreshed. Click &quot;Refresh&quot; in the GDA client and your assignments from ISPyB2 should be pulled into the GDA client</p> <p class=inset><img alt="Container Assigned" src=/assets/images/doc/prepare/ISPyb_RCP.png /></p> </section>'},1198:function(e,t,s){var a,i;a=[s(7),s(1199)],void 0===(i=function(e,t){var s={title:"Feedback"};return{feedback:function(){app.loading(),app.bc.reset([s]),app.content.show(new t)}}}.apply(t,a))||(e.exports=i)},1199:function(e,t,s){var a,i;a=[s(51),s(159),s(160),s(64),s(1200),s(1201)],void 0===(i=function(e,t,s,a,i,o){return e.use(t),a.extend({vueView:e.extend({template:o,data:function(){return{name:"",email:"",feedback:"",isLoading:!1}},methods:{resetForm:function(){this.name="",this.email="",this.feedback="",this.$nextTick((function(){this.$validator.reset()}))},onSubmit:function(){let e=this;this.$validator.validateAll().then((function(t){t?e.submitFeedback():console.log("Form submission prevented, validation failed")}))},submitFeedback:function(){this.isLoading=!0;let e=new i({name:this.name,email:this.email,feedback:this.feedback}),t=this;e.save({},{success:function(e,s,a){app.alert({message:"Feedback successfully submitted"}),t.isLoading=!1,t.resetForm()},error:function(e,s,a){app.alert({message:"Something went wrong submitting this feedback, please try again"}),t.isLoading=!1}})}}})})}.apply(t,a))||(e.exports=i)},1200:function(e,t,s){var a,i;a=[s(6)],void 0===(i=function(e){return e.Model.extend({urlRoot:"/feedback",validation:{name:{required:!0},email:{required:!0,pattern:"email"},feedback:{required:!0}}})}.apply(t,a))||(e.exports=i)},1201:function(e,t){e.exports='<section class=content> <h1>Send Feedback</h1> <p class=help>This page is for sending feedback about the ISPyB web interface to the developers, not for your beamtime! Please use UAS to report feedback for your visits</p> <form novalidate v-bind:class="{loading: isLoading}"> <div class=form> <ul> <li> <label>Your Name</label> <input type=text name=name v-bind:class="{ferror: errors.has(\'name\')}" v-validate="\'required\'" v-model=name /> <span v-if="errors.has(\'name\')" class="errormesage ferror">{{ errors.first(\'name\') }}</span> </li> <li> <label>Your Email Address</label> <input name=email type=email v-bind:class="{ferror: errors.has(\'email\')}" v-validate="\'required|email\'" v-model=email /> <span v-if="errors.has(\'email\')" class="errormesage ferror">{{ errors.first(\'email\') }}</span> </li> <li> <label>Feedback</label> <textarea name=feedback v-bind:class="{ferror: errors.has(\'feedback\')}" v-validate="\'required\'" v-model=feedback></textarea> <span v-if="errors.has(\'feedback\')" class="errormesage ferror">{{ errors.first(\'feedback\') }}</span> </li> </ul> <button name=submit value=1 type=submit class=submit v-on:click.prevent=onSubmit>Send Feedback</button> </div> </form> </section>'}}]);